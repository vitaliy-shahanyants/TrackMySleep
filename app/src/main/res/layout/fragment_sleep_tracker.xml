<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:orientation="vertical">
    <data>
        <variable
            name="viewmodel"
            type="ca.vitos.trackmysleep.viewmodel.sleeptracker.SleepTrackerViewModel" />

    </data>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context="ca.vitos.trackmysleep.view.SleepTrackerFragment">

        <!-- Simplest way of displaying scrollable text and data. There is a
             better and more efficient way to do this, and you will learn about
             RecyclerView in a later lesson. -->

<!--        <ScrollView-->
<!--            android:layout_width="match_parent"-->
<!--            android:layout_height="0dp"-->
<!--            app:layout_constraintBottom_toTopOf="@+id/clear_button"-->
<!--            app:layout_constraintEnd_toEndOf="parent"-->
<!--            app:layout_constraintRight_toRightOf="parent"-->
<!--            app:layout_constraintStart_toStartOf="parent"-->
<!--            app:layout_constraintTop_toBottomOf="@+id/stop_button">-->

<!--            &lt;!&ndash; In the TextView, we can access the nightsString LiveData,-->
<!--                 which keeps it displayed and updated in the TextView-->
<!--                 whenever it changes. &ndash;&gt;-->

<!--            <TextView-->
<!--                android:id="@+id/textview"-->
<!--                android:layout_width="match_parent"-->
<!--                android:layout_height="wrap_content"-->
<!--                android:layout_marginStart="@dimen/margin"-->
<!--                android:layout_marginTop="@dimen/margin"-->
<!--                android:layout_marginEnd="@dimen/margin"-->
<!--                android:text="@{viewmodel.nightsString}" />-->
<!--        </ScrollView>-->
        <androidx.recyclerview.widget.RecyclerView
            android:id="@+id/sleep_list"
            android:layout_width="0dp"
            android:layout_height="0dp"
            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
            app:layout_constraintBottom_toTopOf="@id/clear_button"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/stop_button"
            />


        <Button
            android:id="@+id/start_button"
            style="@style/SleepButtons"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="@dimen/margin"
            android:text="@string/start"
            android:onClick="@{() -> viewmodel.onStartTracking()}"
            android:enabled="@{viewmodel.startButtonVisible}"
            app:layout_constraintBaseline_toBaselineOf="@id/stop_button"
            app:layout_constraintEnd_toStartOf="@+id/stop_button"
            app:layout_constraintHorizontal_chainStyle="spread"
            app:layout_constraintStart_toStartOf="parent" />

        <Button
            android:id="@+id/stop_button"
            style="@style/SleepButtons"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="@dimen/margin"
            android:layout_marginEnd="@dimen/margin"
            android:text="@string/stop"
            android:onClick="@{()-> viewmodel.onStopTracking()}"
            android:enabled="@{viewmodel.stopButtonVisible}"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toEndOf="@+id/start_button"
            app:layout_constraintTop_toTopOf="parent" />

        <Button
            android:id="@+id/clear_button"
            style="@style/SleepButtons"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="@dimen/margin"
            android:layout_marginEnd="@dimen/margin"
            android:layout_marginBottom="@dimen/margin"
            android:text="@string/clear"
            android:onClick="@{()->viewmodel.onClearTracking()}"
            android:enabled="@{viewmodel.clearButtonVisible}"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent" />

    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>